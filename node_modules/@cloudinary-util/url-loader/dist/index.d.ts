import { IAnalyticsOptions } from '@cloudinary/url-gen/sdkAnalytics/interfaces/IAnalyticsOptions';
import ICloudinaryConfigurations from '@cloudinary/url-gen/config/interfaces/Config/ICloudinaryConfigurations';

interface ImageOptionsResize {
    crop?: string;
    width?: number | string;
}
interface ImageOptionsZoomPan {
    loop: string | boolean;
    options: string;
}
interface ImageOptions {
    assetType?: string;
    crop?: string;
    deliveryType?: string;
    effects?: Array<any>;
    format?: string;
    gravity?: string;
    height?: string | number;
    overlays?: Array<any>;
    quality?: number;
    rawTransformations?: string[];
    removeBackground?: boolean;
    sanitize?: boolean;
    resize?: ImageOptionsResize;
    seoSuffix?: string;
    src: string;
    text?: any;
    transformations?: Array<string>;
    underlay?: string;
    underlays?: Array<any>;
    version?: number | string;
    width?: string | number;
    widthResize?: string | number;
    zoom?: string;
    zoompan?: string | boolean | ImageOptionsZoomPan;
}

interface PluginSettings {
    cldImage: any;
    options: ImageOptions;
}
interface PluginOverrides {
    format?: string;
    width?: number;
}

declare const props: string[];
declare function plugin(props: PluginSettings): {};

declare const effectsPlugin_props: typeof props;
declare const effectsPlugin_plugin: typeof plugin;
declare namespace effectsPlugin {
  export {
    effectsPlugin_props as props,
    effectsPlugin_plugin as plugin,
  };
}

interface AnalyticsOptions extends IAnalyticsOptions {
}

interface ConfigOptions extends ICloudinaryConfigurations {
}

declare const transformationPlugins: (typeof effectsPlugin)[];
/**
 * constructCloudinaryUrl
 * @description Builds a full Cloudinary URL using transformation plugins specified by options
 */
interface ConstructUrlProps {
    options: ImageOptions;
    config?: ConfigOptions;
    analytics?: AnalyticsOptions;
}
interface PluginOptionsResize {
    width?: string | number;
}
interface PluginOptions {
    format?: string;
    resize?: PluginOptionsResize;
    width?: string | number;
}
interface PluginResults {
    options?: PluginOptions;
}
declare function constructCloudinaryUrl({ options, config, analytics }: ConstructUrlProps): string;

interface Qualifier {
    location?: string;
    order?: number;
    prefix?: string;
    qualifier?: string | boolean;
}

declare const primary: Record<string, Qualifier>;
declare const position: Record<string, Qualifier>;
declare const text: Record<string, Qualifier>;
declare const effects: Record<string, Qualifier>;

export { AnalyticsOptions, ConfigOptions, ConstructUrlProps, ImageOptions, ImageOptionsResize, ImageOptionsZoomPan, PluginOptions, PluginOptionsResize, PluginOverrides, PluginResults, PluginSettings, Qualifier, constructCloudinaryUrl, effects, position, primary, text, transformationPlugins };
